<!doctype html>

<html>

<head>
    <meta charset="utf-8">

    <title>Flowplayer · Live connection check</title>

    <!-- optimize mobile versions -->
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <!-- Flowplayer skin -->
    <link rel="stylesheet" href="../common/releases/7.0.4/skin/skin.css">

    <!-- Minimal styling for this standalone page, can be removed -->
    <link rel="stylesheet" href="../common/css/demo.css">
    <!-- Syntax highlighting of source code, can be removed -->
    <link rel="stylesheet" href="../common/css/pygments.css">

    <style>
        #content {
            max-width: 912px;
        }

        .flowplayer {
            background: #00abcd;
        }

        .flowplayer .fp-color-play {
            fill: #eee;
        }

        /* customized error display and message */
        .flowplayer.is-offline .fp-controls,
        .flowplayer.is-offline .fp-play {
            display: none !important;
        }

        .flowplayer.is-offline .fp-message {
            width: 100%;
            height: 100%;
            text-align: center;
            background-size: contain;
            background-repeat: no-repeat;
        }

        .flowplayer.is-offline .fp-message h2,
        .flowplayer.is-offline .fp-message p {
            font-weight: bold;
            color: #000;
            text-shadow: 1px 1px #fff
        }

        .flowplayer.is-offline .fp-message h2 {
            margin-top: 15%;
            font-size: 120%;
        }
    </style>

    <!-- Flowplayer library -->
    <script src="../common/releases/7.0.4/flowplayer.min.js"></script>
    <!-- The hlsjs plugin for playback of HLS without Flash in modern browsers -->
    <script src="../common/releases/hlsjs/flowplayer.hlsjs.min.js"></script>


    <script>
        window.onload = function () {

            var container = document.getElementById("live"),
                errImage = new Image(), // to preload error image, see below
                timer,

                player = flowplayer(container, {
                    ratio: 9 / 16,
                    splash: true,
                    live: true,
                    clip: {
                        hlsjs: {
                            xhrSetup: function () {
                                if (this.stats && this.stats.retry > 2) {
                                    // intentionally throw network error
                                    player.trigger("error", [player, {code: 2}]);
                                }
                            }
                        },
                        flashls: {
                            // limit amount of retries to load hls manifests in Flash
                            manifestloadmaxretry: 2
                        },
                        sources: [
                            {
                                type: "application/x-mpegurl",
                                src: "http://wms.shared.streamshow.it/canale8/canale8/playlist.m3u8"
                            }
                        ]
                    }

                }).on("error", function (e, api, err) {
                    var delay = 10,
                        messageElement = container.querySelector(".fp-message");

                    clearInterval(timer);

                    if (err.code === 2 || err.code === 4) {
                        container.className += " is-offline";
                        messageElement.style.backgroundImage = "url(" + errImage.src + ")";
                        messageElement.innerHTML = "<h2>We are sorry, currently no live stream available.</h2>"
                            + "<p>Retrying in <span>" + delay + "</span> seconds ...</p>";

                        if (flowplayer.support.flashVideo) {
                            api.one("flashdisabled", function () {
                                container.querySelector(".fp-flash-disabled").style.display = "none";
                            });
                        }

                        timer = setInterval(function () {
                            delay -= 1;
                            messageElement.querySelector("span").innerHTML = delay;

                            if (!delay) {
                                clearInterval(timer);
                                api.error = api.loading = false;
                                messageElement.innerHTML = "";
                                messageElement.style.backgroundImage = "none";
                                container.className = container.className.replace(/\bis-error\b/, "");
                                container.className = container.className.replace(/\bis-offline\b/, "");
                                api.load(api.conf.clip);
                            }

                        }, 1000);
                    }

                });

            // preload error image in case of network timeouts
            errImage.src = "../media/img/interruption.png";


            /*
             * the following is for demo purposes and simulation only
             * do not use in production!
             */

            var buttons = document.getElementsByTagName("button"),
                i;

            for (i = 0; i < buttons.length; i += 1) {
                buttons[i].onclick = function () {
                    var errorstream = !this.id
                        ? null
                        : this.id === "dummy"
                            ? "http://edge.flowplayer.org/dummy-live.m3u8"
                            : "http://edge.flowplayer.org/non-existent.m3u8";

                    if (player.error) {
                        // clean retry
                        player.error = player.loading = false;
                        container.className = container.className.replace(/\bis-offline\b/, "");
                        container.className = container.className.replace(/\bis-error\b/, "");
                    }

                    if (errorstream) {
                        player.load({
                            sources: [
                                {type: "application/x-mpegurl", src: errorstream}
                            ]
                        });
                    } else {
                        player.load(player.conf.clip);
                    }
                };
            }

        };
    </script>

</head>

<body>

<div id="content">

    <h1>Flowplayer · Live connection check</h1>

    <div id="live"></div>

    <!-- for demo purposes only -->
    <div class="info">
        <p>
            <button id="dummy" type="button">Simulate dummy stream</button>
            <button id="nonexistent" type="button">Simulate non existent stream</button>
            <button type="button">Play configured stream</button>
        </p>
    </div>

    <div class="info">
        <p>Show a meaningful message when the live stream is not available, and demonstrate automatic
            re-connection.</p>

        <p>Also try by interrupting your internet connection.</p>

        <p>Test
            <a id="hlsjstoggle" href="live-check.html-hlsjs=false.htm"><span>without</span> hlsjs plugin</a>.</p>

        <p>Live stream kindly provided by <a href="http://www.streamshow.it/">StreamShow</a>.</p>
    </div>

    <h2 id="head-setup">&lt;head/&gt;</h2>

    <p class="doc">For smoother <a href="https://flowplayer.org/docs/setup.html#hls">HLS</a> playback in modern browsers
        we load the
        <a href="https://flowplayer.org/docs/plugins.html#hlsjs">hlsjs plugin</a>.
    </p>

    <div class="codebox">
        <figure class="code">
            <div class="highlight">
                <pre><span></span><span class="c">&lt;!-- Flowplayer library --&gt;</span><br/><span
                        class="p">&lt;</span><span class="nt">script</span> <span class="na">src</span><span
                        class="o">=</span><span
                        class="s">&quot;//releases.flowplayer.org/7.0.4/flowplayer.min.js&quot;</span><span class="p">&gt;&lt;/</span><span
                        class="nt">script</span><span class="p">&gt;</span><br/><span class="c">&lt;!-- Flowplayer hlsjs engine --&gt;</span><br/><span
                        class="p">&lt;</span><span class="nt">script</span> <span class="na">src</span><span
                        class="o">=</span><span class="s">&quot;//releases.flowplayer.org/hlsjs/flowplayer.hlsjs.min.js&quot;</span><span
                        class="p">&gt;&lt;/</span><span class="nt">script</span><span class="p">&gt;</span><br/></pre>
            </div>
            <br/>
            <figcaption>HTML</figcaption>
        </figure>
    </div>


    <h3 id="css-setup">&lt;style&gt;</h3>

    <div class="codebox">
        <figure class="code">
            <div class="highlight">
                <pre><span></span><span class="p">.</span><span class="nc">flowplayer</span> <span
                        class="p">{</span><br/>  <span class="k">background</span><span class="p">:</span> <span
                        class="mh">#00abcd</span><span class="p">;</span><br/><span class="p">}</span><br/><span
                        class="p">.</span><span class="nc">flowplayer</span> <span class="p">.</span><span class="nc">fp-color-play</span> <span
                        class="p">{</span><br/>  <span class="n">fill</span><span class="p">:</span> <span class="mh">#eee</span><span
                        class="p">;</span><br/><span class="p">}</span><br/>&nbsp;<br/><span class="c">/* customized error display and message */</span><br/><span
                        class="p">.</span><span class="nc">flowplayer</span><span class="p">.</span><span class="nc">is-offline</span> <span
                        class="p">.</span><span class="nc">fp-controls</span><span class="o">,</span><br/><span
                        class="p">.</span><span class="nc">flowplayer</span><span class="p">.</span><span class="nc">is-offline</span> <span
                        class="p">.</span><span class="nc">fp-play</span> <span class="p">{</span><br/>  <span
                        class="k">display</span><span class="p">:</span> <span class="kc">none</span> <span class="cp">!important</span><span
                        class="p">;</span><br/><span class="p">}</span><br/><span class="p">.</span><span class="nc">flowplayer</span><span
                        class="p">.</span><span class="nc">is-offline</span> <span class="p">.</span><span class="nc">fp-message</span> <span
                        class="p">{</span><br/>  <span class="k">width</span><span class="p">:</span> <span class="mi">100</span><span
                        class="kt">%</span><span class="p">;</span><br/>  <span class="k">height</span><span
                        class="p">:</span> <span class="mi">100</span><span class="kt">%</span><span
                        class="p">;</span><br/>  <span class="k">text-align</span><span class="p">:</span> <span
                        class="kc">center</span><span class="p">;</span><br/>  <span
                        class="k">background-size</span><span class="p">:</span> <span class="kc">contain</span><span
                        class="p">;</span><br/>  <span class="k">background-repeat</span><span class="p">:</span> <span
                        class="kc">no-repeat</span><span class="p">;</span><br/><span class="p">}</span><br/><span
                        class="p">.</span><span class="nc">flowplayer</span><span class="p">.</span><span class="nc">is-offline</span> <span
                        class="p">.</span><span class="nc">fp-message</span> <span class="nt">h2</span><span
                        class="o">,</span><br/><span class="p">.</span><span class="nc">flowplayer</span><span
                        class="p">.</span><span class="nc">is-offline</span> <span class="p">.</span><span class="nc">fp-message</span> <span
                        class="nt">p</span> <span class="p">{</span><br/>  <span class="k">font-weight</span><span
                        class="p">:</span> <span class="kc">bold</span><span class="p">;</span><br/>  <span class="k">color</span><span
                        class="p">:</span> <span class="mh">#000</span><span class="p">;</span><br/>  <span class="k">text-shadow</span><span
                        class="p">:</span> <span class="mi">1</span><span class="kt">px</span> <span class="mi">1</span><span
                        class="kt">px</span> <span class="mh">#fff</span><br/><span class="p">}</span><br/><span
                        class="p">.</span><span class="nc">flowplayer</span><span class="p">.</span><span class="nc">is-offline</span> <span
                        class="p">.</span><span class="nc">fp-message</span> <span class="nt">h2</span> <span class="p">{</span><br/>  <span
                        class="k">margin-top</span><span class="p">:</span> <span class="mi">15</span><span
                        class="kt">%</span><span class="p">;</span><br/>  <span class="k">font-size</span><span
                        class="p">:</span> <span class="mi">120</span><span class="kt">%</span><span
                        class="p">;</span><br/><span class="p">}</span><br/></pre>
            </div>
            <br/>
            <figcaption>CSS</figcaption>
        </figure>
    </div>


    <h3 id="javascript-setup">&lt;script&gt;</h3>

    <div class="doc">
        <p>If the stream goes offline while viewed the
            <a href="https://flowplayer.org/docs/plugins.html#hlsjs">hlsjs engine</a> will continue to
            connect. A custom
            <a href="https://github.com/video-dev/hls.js/blob/master/API.md#xhrsetup">xhrSetup</a> will
            prevent excessive retries and trigger an intentional network error.</p>

        <p>By default
            <a href="https://flowplayer.org/docs/setup.html#flash-hls">Flash HLS</a> will retry infinitely
            to load HLS manifests ("playlists") if the master playlist is present. We limit the amount in the
            <code>flashls</code>
            <a href="https://flowplayer.org/docs/setup.html#flashls">clip configuration</a> to trigger an
            error with a customized message.</p>

        <p>Note: depending on your deployment and the stability of the stream you may have to tweak the
            timers according to your needs and wishes.</p>
    </div>

    <div class="codebox">
        <figure class="code">
            <div class="highlight">
                <pre><span></span><span class="nb">window</span><span class="p">.</span><span
                        class="nx">onload</span> <span class="o">=</span> <span class="kd">function</span> <span
                        class="p">()</span> <span class="p">{</span><br/>&nbsp;<br/>  <span class="kd">var</span> <span
                        class="nx">container</span> <span class="o">=</span> <span class="nb">document</span><span
                        class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span
                        class="s2">&quot;live&quot;</span><span class="p">),</span><br/>      <span
                        class="nx">errImage</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Image</span><span
                        class="p">(),</span> <span
                        class="c1">// to preload error image, see below</span><br/>      <span
                        class="nx">timer</span><span class="p">,</span><br/>&nbsp;<br/>  <span class="nx">player</span> <span
                        class="o">=</span> <span class="nx">flowplayer</span><span class="p">(</span><span class="nx">container</span><span
                        class="p">,</span> <span class="p">{</span><br/>    <span class="nx">ratio</span><span
                        class="o">:</span> <span class="mi">9</span><span class="o">/</span><span
                        class="mi">16</span><span class="p">,</span><br/>    <span class="nx">splash</span><span
                        class="o">:</span> <span class="kc">true</span><span class="p">,</span><br/>    <span
                        class="nx">live</span><span class="o">:</span> <span class="kc">true</span><span
                        class="p">,</span><br/>    <span class="nx">clip</span><span class="o">:</span> <span class="p">{</span><br/>      <span
                        class="nx">hlsjs</span><span class="o">:</span> <span class="p">{</span><br/>        <span
                        class="nx">xhrSetup</span><span class="o">:</span> <span class="kd">function</span> <span
                        class="p">()</span> <span class="p">{</span><br/>          <span class="k">if</span> <span
                        class="p">(</span><span class="k">this</span><span class="p">.</span><span
                        class="nx">stats</span> <span class="o">&amp;&amp;</span> <span class="k">this</span><span
                        class="p">.</span><span class="nx">stats</span><span class="p">.</span><span
                        class="nx">retry</span> <span class="o">&gt;</span> <span class="mi">2</span><span
                        class="p">)</span> <span class="p">{</span><br/>            <span class="c1">// intentionally throw network error</span><br/>            <span
                        class="nx">player</span><span class="p">.</span><span class="nx">trigger</span><span
                        class="p">(</span><span class="s2">&quot;error&quot;</span><span class="p">,</span> <span
                        class="p">[</span><span class="nx">player</span><span class="p">,</span> <span
                        class="p">{</span><span class="nx">code</span><span class="o">:</span> <span class="mi">2</span><span
                        class="p">}]);</span><br/>          <span class="p">}</span><br/>        <span
                        class="p">}</span><br/>      <span class="p">},</span><br/>      <span class="nx">flashls</span><span
                        class="o">:</span> <span class="p">{</span><br/>        <span class="c1">// limit amount of retries to load hls manifests in Flash</span><br/>        <span
                        class="nx">manifestloadmaxretry</span><span class="o">:</span> <span class="mi">2</span><br/>      <span
                        class="p">},</span><br/>      <span class="nx">sources</span><span class="o">:</span> <span
                        class="p">[</span><br/>        <span class="p">{</span> <span class="nx">type</span><span
                        class="o">:</span> <span class="s2">&quot;application/x-mpegurl&quot;</span><span
                        class="p">,</span><br/>          <span class="nx">src</span><span class="o">:</span>  <span
                        class="s2">&quot;http://wms.shared.streamshow.it/canale8/canale8/playlist.m3u8&quot;</span> <span
                        class="p">}</span><br/>      <span class="p">]</span><br/>    <span class="p">}</span><br/>&nbsp;<br/>  <span
                        class="p">}).</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;error&quot;</span><span
                        class="p">,</span> <span class="kd">function</span> <span class="p">(</span><span
                        class="nx">e</span><span class="p">,</span> <span class="nx">api</span><span class="p">,</span> <span
                        class="nx">err</span><span class="p">)</span> <span class="p">{</span><br/>    <span class="kd">var</span> <span
                        class="nx">delay</span> <span class="o">=</span> <span class="mi">10</span><span
                        class="p">,</span><br/>        <span class="nx">messageElement</span> <span
                        class="o">=</span> <span class="nx">container</span><span class="p">.</span><span class="nx">querySelector</span><span
                        class="p">(</span><span class="s2">&quot;.fp-message&quot;</span><span class="p">);</span><br/>&nbsp;<br/>    <span
                        class="nx">clearInterval</span><span class="p">(</span><span class="nx">timer</span><span
                        class="p">);</span><br/>&nbsp;<br/>    <span class="k">if</span> <span class="p">(</span><span
                        class="nx">err</span><span class="p">.</span><span class="nx">code</span> <span
                        class="o">===</span> <span class="mi">2</span> <span class="o">||</span> <span
                        class="nx">err</span><span class="p">.</span><span class="nx">code</span> <span
                        class="o">===</span> <span class="mi">4</span><span class="p">)</span> <span
                        class="p">{</span><br/>      <span class="nx">container</span><span class="p">.</span><span
                        class="nx">className</span> <span class="o">+=</span> <span
                        class="s2">&quot; is-offline&quot;</span><span class="p">;</span><br/>      <span class="nx">messageElement</span><span
                        class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">backgroundImage</span> <span
                        class="o">=</span> <span class="s2">&quot;url(&quot;</span> <span class="o">+</span> <span
                        class="nx">errImage</span><span class="p">.</span><span class="nx">src</span> <span
                        class="o">+</span> <span class="s2">&quot;)&quot;</span><span class="p">;</span><br/>      <span
                        class="nx">messageElement</span><span class="p">.</span><span class="nx">innerHTML</span> <span
                        class="o">=</span> <span class="s2">&quot;&lt;h2&gt;We are sorry, currently no live stream available.&lt;/h2&gt;&quot;</span><br/>                               <span
                        class="o">+</span> <span class="s2">&quot;&lt;p&gt;Retrying in &lt;span&gt;&quot;</span> <span
                        class="o">+</span> <span class="nx">delay</span> <span class="o">+</span> <span class="s2">&quot;&lt;/span&gt; seconds ...&lt;/p&gt;&quot;</span><span
                        class="p">;</span><br/>&nbsp;<br/>      <span class="k">if</span> <span class="p">(</span><span
                        class="nx">flowplayer</span><span class="p">.</span><span class="nx">support</span><span
                        class="p">.</span><span class="nx">flashVideo</span><span class="p">)</span> <span
                        class="p">{</span><br/>        <span class="nx">api</span><span class="p">.</span><span
                        class="nx">one</span><span class="p">(</span><span
                        class="s2">&quot;flashdisabled&quot;</span><span class="p">,</span> <span
                        class="kd">function</span> <span class="p">()</span> <span
                        class="p">{</span><br/>          <span class="nx">container</span><span class="p">.</span><span
                        class="nx">querySelector</span><span class="p">(</span><span class="s2">&quot;.fp-flash-disabled&quot;</span><span
                        class="p">).</span><span class="nx">style</span><span class="p">.</span><span
                        class="nx">display</span> <span class="o">=</span> <span class="s2">&quot;none&quot;</span><span
                        class="p">;</span><br/>        <span class="p">});</span><br/>      <span
                        class="p">}</span><br/>&nbsp;<br/>      <span class="nx">timer</span> <span
                        class="o">=</span> <span class="nx">setInterval</span><span class="p">(</span><span class="kd">function</span> <span
                        class="p">()</span> <span class="p">{</span><br/>        <span class="nx">delay</span> <span
                        class="o">-=</span> <span class="mi">1</span><span class="p">;</span><br/>        <span
                        class="nx">messageElement</span><span class="p">.</span><span
                        class="nx">querySelector</span><span class="p">(</span><span
                        class="s2">&quot;span&quot;</span><span class="p">).</span><span
                        class="nx">innerHTML</span> <span class="o">=</span> <span class="nx">delay</span><span
                        class="p">;</span><br/>&nbsp;<br/>        <span class="k">if</span> <span
                        class="p">(</span><span class="o">!</span><span class="nx">delay</span><span class="p">)</span> <span
                        class="p">{</span><br/>          <span class="nx">clearInterval</span><span
                        class="p">(</span><span class="nx">timer</span><span class="p">);</span><br/>          <span
                        class="nx">api</span><span class="p">.</span><span class="nx">error</span> <span
                        class="o">=</span> <span class="nx">api</span><span class="p">.</span><span
                        class="nx">loading</span> <span class="o">=</span> <span class="kc">false</span><span class="p">;</span><br/>          <span
                        class="nx">messageElement</span><span class="p">.</span><span class="nx">innerHTML</span> <span
                        class="o">=</span> <span class="s2">&quot;&quot;</span><span
                        class="p">;</span><br/>          <span class="nx">messageElement</span><span
                        class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">backgroundImage</span> <span
                        class="o">=</span> <span class="s2">&quot;none&quot;</span><span class="p">;</span><br/>          <span
                        class="nx">container</span><span class="p">.</span><span class="nx">className</span> <span
                        class="o">=</span> <span class="nx">container</span><span class="p">.</span><span class="nx">className</span><span
                        class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/\bis-error\b/</span><span
                        class="p">,</span> <span class="s2">&quot;&quot;</span><span
                        class="p">);</span><br/>          <span class="nx">container</span><span class="p">.</span><span
                        class="nx">className</span> <span class="o">=</span> <span class="nx">container</span><span
                        class="p">.</span><span class="nx">className</span><span class="p">.</span><span class="nx">replace</span><span
                        class="p">(</span><span class="sr">/\bis-offline\b/</span><span class="p">,</span> <span
                        class="s2">&quot;&quot;</span><span class="p">);</span><br/>          <span
                        class="nx">api</span><span class="p">.</span><span class="nx">load</span><span
                        class="p">(</span><span class="nx">api</span><span class="p">.</span><span
                        class="nx">conf</span><span class="p">.</span><span class="nx">clip</span><span
                        class="p">);</span><br/>        <span class="p">}</span><br/>&nbsp;<br/>      <span
                        class="p">},</span> <span class="mi">1000</span><span class="p">);</span><br/>    <span
                        class="p">}</span><br/>&nbsp;<br/>  <span class="p">});</span><br/>&nbsp;<br/>  <span
                        class="c1">// preload error image in case of network timeouts</span><br/>  <span class="nx">errImage</span><span
                        class="p">.</span><span class="nx">src</span> <span class="o">=</span> <span class="s2">&quot;http://demos.flowplayer.org/media/img/interruption.png&quot;</span><span
                        class="p">;</span><br/>&nbsp;<br/><br/>  <span class="cm">/*</span><br/><span class="cm">   * the following is for demo purposes and simulation only</span><br/><span
                        class="cm">   * do not use in production!</span><br/><span
                        class="cm">   */</span><br/>&nbsp;<br/>  <span class="kd">var</span> <span
                        class="nx">buttons</span> <span class="o">=</span> <span class="nb">document</span><span
                        class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span
                        class="s2">&quot;button&quot;</span><span class="p">),</span><br/>      <span
                        class="nx">i</span><span class="p">;</span><br/>&nbsp;<br/>  <span class="k">for</span> <span
                        class="p">(</span><span class="nx">i</span> <span class="o">=</span> <span
                        class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span
                        class="o">&lt;</span> <span class="nx">buttons</span><span class="p">.</span><span class="nx">length</span><span
                        class="p">;</span> <span class="nx">i</span> <span class="o">+=</span> <span class="mi">1</span><span
                        class="p">)</span> <span class="p">{</span><br/>    <span class="nx">buttons</span><span
                        class="p">[</span><span class="nx">i</span><span class="p">].</span><span
                        class="nx">onclick</span> <span class="o">=</span> <span class="kd">function</span> <span
                        class="p">()</span> <span class="p">{</span><br/>      <span class="kd">var</span> <span
                        class="nx">errorstream</span> <span class="o">=</span> <span class="o">!</span><span class="k">this</span><span
                        class="p">.</span><span class="nx">id</span><br/>          <span class="o">?</span> <span
                        class="kc">null</span><br/>          <span class="o">:</span> <span class="k">this</span><span
                        class="p">.</span><span class="nx">id</span> <span class="o">===</span> <span class="s2">&quot;dummy&quot;</span><br/>            <span
                        class="o">?</span> <span
                        class="s2">&quot;//edge.flowplayer.org/dummy-live.m3u8&quot;</span><br/>            <span
                        class="o">:</span> <span
                        class="s2">&quot;//edge.flowplayer.org/non-existent.m3u8&quot;</span><span
                        class="p">;</span><br/>&nbsp;<br/>      <span class="k">if</span> <span class="p">(</span><span
                        class="nx">player</span><span class="p">.</span><span class="nx">error</span><span
                        class="p">)</span> <span class="p">{</span><br/>        <span
                        class="c1">// clean retry</span><br/>        <span class="nx">player</span><span
                        class="p">.</span><span class="nx">error</span> <span class="o">=</span> <span
                        class="nx">player</span><span class="p">.</span><span class="nx">loading</span> <span class="o">=</span> <span
                        class="kc">false</span><span class="p">;</span><br/>        <span
                        class="nx">container</span><span class="p">.</span><span class="nx">className</span> <span
                        class="o">=</span> <span class="nx">container</span><span class="p">.</span><span class="nx">className</span><span
                        class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/\bis-offline\b/</span><span
                        class="p">,</span> <span class="s2">&quot;&quot;</span><span
                        class="p">);</span><br/>        <span class="nx">container</span><span class="p">.</span><span
                        class="nx">className</span> <span class="o">=</span> <span class="nx">container</span><span
                        class="p">.</span><span class="nx">className</span><span class="p">.</span><span class="nx">replace</span><span
                        class="p">(</span><span class="sr">/\bis-error\b/</span><span class="p">,</span> <span
                        class="s2">&quot;&quot;</span><span class="p">);</span><br/>      <span class="p">}</span><br/>&nbsp;<br/>      <span
                        class="k">if</span> <span class="p">(</span><span class="nx">errorstream</span><span
                        class="p">)</span> <span class="p">{</span><br/>        <span class="nx">player</span><span
                        class="p">.</span><span class="nx">load</span><span class="p">({</span><br/>          <span
                        class="nx">sources</span><span class="o">:</span> <span class="p">[</span><br/>            <span
                        class="p">{</span> <span class="nx">type</span><span class="o">:</span> <span class="s2">&quot;application/x-mpegurl&quot;</span><span
                        class="p">,</span> <span class="nx">src</span><span class="o">:</span> <span class="nx">errorstream</span> <span
                        class="p">}</span><br/>          <span class="p">]</span><br/>        <span class="p">});</span><br/>      <span
                        class="p">}</span> <span class="k">else</span> <span class="p">{</span><br/>        <span
                        class="nx">player</span><span class="p">.</span><span class="nx">load</span><span
                        class="p">(</span><span class="nx">player</span><span class="p">.</span><span
                        class="nx">conf</span><span class="p">.</span><span class="nx">clip</span><span
                        class="p">);</span><br/>      <span class="p">}</span><br/>    <span
                        class="p">};</span><br/>  <span class="p">}</span><br/>&nbsp;<br/><span class="p">};</span><br/></pre>
            </div>
            <br/>
            <figcaption>JavaScript</figcaption>
        </figure>
    </div>


    <h2 id="html-setup">&lt;body/&gt;</h2>

    <div class="codebox">
        <figure class="code">
            <div class="highlight">
                <pre><span></span><span class="p">&lt;</span><span class="nt">div</span> <span class="na">id</span><span
                        class="o">=</span><span class="s">&quot;live&quot;</span><span class="p">&gt;&lt;/</span><span
                        class="nt">div</span><span class="p">&gt;</span><br/>&nbsp;<br/><span class="c">&lt;!-- for demo purposes only --&gt;</span><br/><span
                        class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span
                        class="o">=</span><span class="s">&quot;info&quot;</span><span class="p">&gt;</span><br/>  <span
                        class="p">&lt;</span><span class="nt">p</span><span class="p">&gt;&lt;</span><span class="nt">button</span> <span
                        class="na">id</span><span class="o">=</span><span class="s">&quot;dummy&quot;</span> <span
                        class="na">type</span><span class="o">=</span><span class="s">&quot;button&quot;</span><span
                        class="p">&gt;</span>Simulate dummy stream<span class="p">&lt;/</span><span
                        class="nt">button</span><span class="p">&gt;</span><br/>  <span class="p">&lt;</span><span
                        class="nt">button</span> <span class="na">id</span><span class="o">=</span><span class="s">&quot;nonexistent&quot;</span> <span
                        class="na">type</span><span class="o">=</span><span class="s">&quot;button&quot;</span><span
                        class="p">&gt;</span>Simulate non existent stream<span class="p">&lt;/</span><span class="nt">button</span><span
                        class="p">&gt;</span><br/>  <span class="p">&lt;</span><span class="nt">button</span> <span
                        class="na">type</span><span class="o">=</span><span class="s">&quot;button&quot;</span><span
                        class="p">&gt;</span>Play configured stream<span class="p">&lt;/</span><span
                        class="nt">button</span><span class="p">&gt;&lt;/</span><span class="nt">p</span><span
                        class="p">&gt;</span><br/><span class="p">&lt;/</span><span class="nt">div</span><span
                        class="p">&gt;</span><br/></pre>
            </div>
            <br/>
            <figcaption>HTML</figcaption>
        </figure>
    </div>


    <p class="doc">See also <a href="../scripting/recover.html">this demo</a>.</p>


    <div class="footer">
        <p><a href="index.html">Демо в этом разделе</a></p>

        <hr>

        <p><a href="../index.html">Flowplayer Demos+</a></p>

        <hr>

        <p><a href="https://flowplayer.org/demos/" target="_blank">Flowplayer Demos</a></p>

        <hr>

        <p><a href="../v6/index.html">Version 6 Demos</a></p>
    </div>
</div> <!-- end content -->

<!-- for flashls testing only, DO NOT USE IN PRODUCTION! -->
<script>
    if (location.search.indexOf("hlsjs=false") > -1) {
        flowplayer.conf.hlsjs = false;
    } else if (location.search.indexOf("safari=true") > -1) {
        flowplayer.conf.hlsjs = {
            safari: true
        };
    }

    var toggleButton = document.getElementById("hlsjstoggle"),
        hlsjsLoaded = location.search.indexOf("hlsjs=false") < 0;

    if (toggleButton) {
        if (flowplayer.engines[0].engineName !== "hlsjs") {
            toggleButton.parentNode.style.display = "none";
        } else {
            toggleButton.href = location.pathname + (hlsjsLoaded
                    ? "?hlsjs=false"
                    : "");
            toggleButton.getElementsByTagName("span")[0].innerHTML = hlsjsLoaded
                ? "without"
                : "with";
        }
    }
</script>
</body>
</html>